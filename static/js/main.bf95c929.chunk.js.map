{"version":3,"sources":["api/API.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","App","useState","messages","setMessages","on","setOn","isOfflineMode","setIsOfflineMode","message","setMessage","color","setColor","speed","setSpeed","brightness","setBrightness","huebee","useRef","useEffect","isMounted","a","API","get","data","console","log","record","b","error","load","current","Huebee","notation","saturations","hues","hue0","hue","sat","lum","doSubmit","state","post","className","htmlFor","id","type","value","onChange","target","min","max","Math","parseInt","isNaN","bri","ref","style","cursor","hex","title","onClick","text","substring","map","index","key","backgroundColor","toString","remaining","filter","it","handleDismiss","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf95c929.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://jsonbin.org/rektdeckard/marquise\",\r\n  headers: {\r\n    // \"secret-key\":\r\n    //   \"$2b$10$AOXx.uD.2vMLIWBhNRyF6.qDasREvbbmaKmPVNtaPgkT/0pF7S52q\",\r\n    \"Content-Type\": \"application/json\",\r\n    // \"X-Master-Key\": \"$2b$10$AOXx.uD.2vMLIWBhNRyF6.qDasREvbbmaKmPVNtaPgkT/0pF7S52q\",\r\n    \"authorization\": \"token c5dae7e7-9bed-4859-a8a7-8a13d8746339\",\r\n    // \"X-Bin-Versioning\": false,\r\n  },\r\n});\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Huebee from \"huebee\";\r\n\r\nimport \"../assets/huebee.css\";\r\nimport API from \"../api/API\";\r\n\r\nconst App = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [on, setOn] = useState(true);\r\n  const [isOfflineMode, setIsOfflineMode] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [color, setColor] = useState(\"#F56565\");\r\n  const [speed, setSpeed] = useState(2);\r\n  const [brightness, setBrightness] = useState(25);\r\n\r\n  const huebee = useRef();\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    const load = async () => {\r\n      try {\r\n        const { data } = await API.get();\r\n        console.log(data);\r\n        const record = data;\r\n        if (isMounted) {\r\n          setMessages(record.messages ?? []);\r\n          setOn(record.on ?? true);\r\n          setBrightness(b => (record.brightness ?? b))\r\n          setIsOfflineMode(record.isOfflineMode ?? false);\r\n        }\r\n      } catch(e) {\r\n        console.error(e);\r\n      }\r\n    };\r\n\r\n    const setupPicker = () => {\r\n      huebee.current = new Huebee(\".color-input\", {\r\n        notation: \"hex\",\r\n        saturations: 1,\r\n        hues: 20,\r\n        hue0: 210,\r\n      });\r\n      huebee.current.on(\"change\", (color, hue, sat, lum) => {\r\n        if (isMounted) setColor(color);\r\n      });\r\n    };\r\n\r\n    load();\r\n    setupPicker();\r\n\r\n    return () => (isMounted = false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    huebee.current?.setColor(color); // eslint-disable-line no-unused-expressions\r\n  }, [color]);\r\n\r\n  const doSubmit = async (state = { on: false }) => {\r\n    try {\r\n      const { data } = await API.post(\"/\", state);\r\n      console.log(data);\r\n      setMessages(data?.messages ?? []);\r\n      setOn(data?.on ?? true);\r\n      setIsOfflineMode(data?.isOfflineMode ?? false);\r\n      setBrightness(data?.brightness ?? 25);\r\n    } catch(e) {\r\n      console.error(\"Could not complete request\", e);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    doSubmit({\r\n      messages: [\r\n        ...messages,\r\n        { text: message, color: parseInt(color.substring(1), 16), speed: speed ?? 2 },\r\n      ],\r\n      on,\r\n      brightness: brightness ?? 5,\r\n      isOfflineMode,\r\n    });\r\n  };\r\n\r\n  const handleDismiss = (message) => {\r\n    const remaining = messages.filter((it) => it.text !== message);\r\n    doSubmit({ on, brightness, isOfflineMode, messages: remaining });\r\n  };\r\n\r\n  const handleClear = () => {\r\n    doSubmit({ on, brightness, isOfflineMode, messages: [] });\r\n  };\r\n\r\n  const toggleOn = () => {\r\n    doSubmit({ on: !on, brightness, isOfflineMode, messages });\r\n  };\r\n\r\n  const toggleisOffline = () => {\r\n    doSubmit({ on, brightness, messages, isOfflineMode: !isOfflineMode });\r\n  };\r\n\r\n  const handleSpeedChange = ({ target: { value } }) => {\r\n    if (!value) setSpeed(\"\");\r\n    const speed = Math.min(Math.max(parseInt(value), 1), 10);\r\n    if (!isNaN(speed)) setSpeed(speed);\r\n  }\r\n\r\n  const handleColorChange = ({ hex }) => {\r\n    setColor(hex);\r\n  };\r\n\r\n  const handleBrightnessChange = ({ target: { value } }) => {\r\n    if (!value) return setBrightness(\"\");\r\n    const bri = Math.min(Math.max(parseInt(value), 0), 255);\r\n    if (!isNaN(bri)) setBrightness(bri);\r\n  };\r\n\r\n  const renderMessage = (message, index) => (\r\n    <div\r\n      key={index}\r\n      className=\"max-w-lg mx-auto flex p-2 bg-gray-900 text-gray-400 rounded-lg shadow-xl mb-4\"\r\n    >\r\n      <div\r\n        className=\"inline-block rounded text-center text-gray-900 px-4 py-2 m-2\"\r\n        style={{ backgroundColor: `#${message.color.toString(16)}` }}\r\n      >\r\n        {index + 1}\r\n      </div>\r\n      <div className=\"flex-1 px-4 py-2 m-2 font-mono truncate\">\r\n        {message.text}\r\n      </div>\r\n      <button\r\n        className=\"inline-block rounded text-center px-4 py-2 m-2 bg-gray-800 hover:bg-red-700 font-bold text-white focus:outline-none focus:shadow-outline\"\r\n        type=\"button\"\r\n        onClick={() => handleDismiss(message.text)}\r\n      >\r\n        x\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"min-h-screen min-w-screen p-8 md:p-24 bg-gray-700\">\r\n      <div className=\"max-w-lg mx-auto px-4 pb-8 text-gray-400 font-mono text-center\">\r\n        {/* <img src={logo} alt=\"Marquise logo\" /> */}\r\n        <p className=\"text-4xl\">Marquise</p>\r\n        <p className=\"text-sm\">\r\n          A handy little LED sign you can command from your browser :)\r\n        </p>\r\n      </div>\r\n      <div className=\"max-w-lg mx-auto flex p-4 bg-gray-900 rounded-lg shadow-xl mb-4\">\r\n        <form className=\"w-full\">\r\n          <div className=\"rounded bg-gray-800 p-4 mb-2\">\r\n            <div>\r\n              <label\r\n                className=\"block font-mono text-gray-400 text-sm font-bold mb-2\"\r\n                htmlFor=\"message\"\r\n              >\r\n                MESSAGE\r\n              </label>\r\n              <textarea\r\n                className={`shadow appearance-none ${\r\n                  false ? \"border-red-600\" : \"\"\r\n                } rounded resize-y h-16 w-full py-2 px-3 bg-green-200 text-gray-900 font-mono mb-3 leading-tight focus:outline-none focus:shadow-outline`}\r\n                id=\"message\"\r\n                type=\"text\"\r\n                value={message}\r\n                onChange={({ target: { value } }) => setMessage(value)}\r\n              />\r\n            </div>\r\n            <div className=\"flex flex-wrap -mx-3 mb-2\">\r\n              <div className=\"w-full sm:w-1/2 px-3 mb-2 sm:mb-0\">\r\n                <label\r\n                  className=\"block font-mono text-gray-400 text-sm font-bold mb-2\"\r\n                  htmlFor=\"speed\"\r\n                >\r\n                  SPEED\r\n                </label>\r\n                <input\r\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 bg-green-200 text-gray-900 font-mono mb-3 leading-tight focus:outline-none focus:shadow-outline\"\r\n                  id=\"speed\"\r\n                  type=\"number\"\r\n                  value={speed}\r\n                  min={1}\r\n                  max={10}\r\n                  onChange={handleSpeedChange}\r\n                />\r\n              </div>\r\n              <div className=\"w-full sm:w-1/2 px-3 mb-2 sm:mb-0\">\r\n                <label\r\n                  className=\"block font-mono text-gray-400 text-sm font-bold mb-2\"\r\n                  htmlFor=\"brightness\"\r\n                >\r\n                  BRIGHTNESS\r\n                </label>\r\n                <input\r\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 bg-green-200 text-gray-900 font-mono mb-3 leading-tight focus:outline-none focus:shadow-outline\"\r\n                  id=\"brightness\"\r\n                  type=\"number\"\r\n                  value={brightness}\r\n                  min={1}\r\n                  max={255}\r\n                  onChange={handleBrightnessChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <label\r\n                className=\"block font-mono text-gray-400 text-sm font-bold mb-2\"\r\n                htmlFor=\"color\"\r\n              >\r\n                COLOR\r\n              </label>\r\n              <input\r\n                ref={huebee}\r\n                id=\"color2\"\r\n                className=\"color-input shadow appearance-none rounded w-full py-2 px-3 bg-green-200 text-gray-900 font-mono mb-3 leading-tight focus:outline-none focus:shadow-outline\"\r\n                style={{ cursor: \"pointer\" }}\r\n                value={color}\r\n                onChange={handleColorChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"rounded bg-gray-800 p-4\">\r\n            <div className=\"flex items-center space-x-3 mb-3\">\r\n              <button\r\n                className={`w-full ${\r\n                  on\r\n                    ? \"bg-gray-700 hover:bg-gray-500\"\r\n                    : \"bg-gray-500 hover:bg-gray-700\"\r\n                } text-white text-sm font-mono py-2 px-4 rounded focus:outline-none focus:shadow-outline`}\r\n                type=\"button\"\r\n                title=\"Screen power. When 'OFF', checks every 10 seconds for power state.\"\r\n                onClick={toggleOn}\r\n              >\r\n                {on ? \"ON\" : \"OFF\"}\r\n              </button>\r\n              <button\r\n                className={`w-full ${\r\n                  isOfflineMode\r\n                    ? \"bg-gray-500 hover:bg-gray-700\"\r\n                    : \"bg-gray-700 hover:bg-gray-500\"\r\n                } text-white text-sm font-mono py-2 px-4 rounded focus:outline-none focus:shadow-outline`}\r\n                type=\"button\"\r\n                title=\"When 'LIVE', device will check for new messages once a minute. Use 'OFFLINE' mode if you want to set messages to use on the go. Requires hard-reset.\"\r\n                onClick={toggleisOffline}\r\n              >\r\n                {isOfflineMode ? \"OFFLINE\" : \"LIVE\"}\r\n              </button>\r\n              <button\r\n                className=\"w-full bg-gray-500 hover:bg-gray-700 text-white text-sm font-mono py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n                type=\"button\"\r\n                title=\"Delete all custom messages. Will revert to device's default message.\"\r\n                onClick={handleClear}\r\n              >\r\n                CLEAR\r\n              </button>\r\n            </div>\r\n            <button\r\n              className=\"w-full bg-red-500 hover:bg-red-700 text-white text-sm font-mono py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n              type=\"button\"\r\n              title=\"Upload a message to the device.\"\r\n              onClick={handleSubmit}\r\n            >\r\n              SEND\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {messages?.map(renderMessage)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/main.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}