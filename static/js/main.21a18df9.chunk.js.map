{"version":3,"sources":["api/API.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","versioning","App","useState","messages","setMessages","on","setOn","isOfflineMode","setIsOfflineMode","message","setMessage","color","setColor","speed","setSpeed","huebee","useRef","useEffect","isMounted","a","API","get","data","console","log","load","current","Huebee","notation","saturations","hues","hue0","hue","sat","lum","doSubmit","state","put","className","htmlFor","id","type","value","onChange","target","min","max","ref","style","cursor","hex","title","onClick","text","parseInt","substring","map","index","key","backgroundColor","toString","remaining","filter","it","handleDismiss","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21a18df9.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://api.jsonbin.io/b/5ef17e1f97cb753b4d160c53\",\r\n  headers: {\r\n    \"secret-key\":\r\n      \"$2b$10$AOXx.uD.2vMLIWBhNRyF6.qDasREvbbmaKmPVNtaPgkT/0pF7S52q\",\r\n    \"Content-Type\": \"application/json\",\r\n    versioning: false,\r\n  },\r\n});\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { HuePicker, AlphaPicker } from \"react-color\";\r\nimport Huebee from \"huebee\";\r\n\r\nimport \"../assets/huebee.css\";\r\nimport API from \"../api/API\";\r\n\r\nconst App = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [on, setOn] = useState(true);\r\n  const [isOfflineMode, setIsOfflineMode] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [color, setColor] = useState(\"#F56565\");\r\n  const [speed, setSpeed] = useState(2);\r\n\r\n  const huebee = useRef();\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    const load = async () => {\r\n      const { data } = await API.get(\"/latest\");\r\n      console.log(data);\r\n      if (isMounted) {\r\n        setMessages(data.messages);\r\n        setOn(data.on);\r\n        setIsOfflineMode(data.isOfflineMode);\r\n      }\r\n    };\r\n\r\n    const setupPicker = () => {\r\n      huebee.current = new Huebee(\".color-input\", {\r\n        notation: \"hex\",\r\n        saturations: 1,\r\n        hues: 20,\r\n        hue0: 210,\r\n      });\r\n      huebee.current.on(\"change\", (color, hue, sat, lum) => {\r\n        if (isMounted) setColor(color);\r\n      });\r\n    };\r\n\r\n    load();\r\n    setupPicker();\r\n\r\n    return () => (isMounted = false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    huebee.current?.setColor(color); // eslint-disable-line no-unused-expressions\r\n  }, [color]);\r\n\r\n  const doSubmit = async (state = { on: false }) => {\r\n    const { data } = await API.put(\"/\", state);\r\n    console.log(data);\r\n    setMessages(data?.data?.messages ?? []);\r\n    setOn(data?.data?.on ?? true);\r\n    setIsOfflineMode(data?.data?.isOfflineMode ?? false);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    doSubmit({\r\n      messages: [\r\n        ...messages,\r\n        { text: message, color: parseInt(color.substring(1), 16), speed },\r\n      ],\r\n      on,\r\n      isOfflineMode,\r\n    });\r\n  };\r\n\r\n  const handleDismiss = (message) => {\r\n    const remaining = messages.filter((it) => it.text !== message);\r\n    doSubmit({ on, isOfflineMode, messages: remaining });\r\n  };\r\n\r\n  const handleClear = () => {\r\n    doSubmit({ on, isOfflineMode, messages: [] });\r\n  };\r\n\r\n  const toggleOn = () => {\r\n    doSubmit({ on: !on, isOfflineMode, messages });\r\n  };\r\n\r\n  const toggleisOffline = () => {\r\n    doSubmit({ on, messages, isOfflineMode: !isOfflineMode });\r\n  };\r\n\r\n  const handleColorChange = ({ hex }) => {\r\n    setColor(hex);\r\n  };\r\n\r\n  const renderMessage = (message, index) => (\r\n    <div\r\n      key={index}\r\n      className=\"max-w-lg mx-auto flex p-2 bg-gray-900 text-gray-400 rounded-lg shadow-xl mb-4\"\r\n    >\r\n      <div\r\n        className=\"inline-block rounded text-center text-gray-900 px-4 py-2 m-2\"\r\n        style={{ backgroundColor: `#${message.color.toString(16)}` }}\r\n      >\r\n        {index + 1}\r\n      </div>\r\n      <div className=\"flex-1 px-4 py-2 m-2 font-mono truncate\">\r\n        {message.text}\r\n      </div>\r\n      <button\r\n        className=\"inline-block rounded text-center px-4 py-2 m-2 bg-gray-800 hover:bg-red-700 font-bold text-white focus:outline-none focus:shadow-outline\"\r\n        type=\"button\"\r\n        onClick={() => handleDismiss(message.text)}\r\n      >\r\n        x\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"min-h-screen min-w-screen p-8 md:p-24 bg-gray-700\">\r\n      <div className=\"max-w-lg mx-auto px-4 pb-8 text-gray-400 font-mono text-center\">\r\n        {/* <img src={logo} alt=\"Marquise logo\" /> */}\r\n        <p className=\"text-4xl\">Marquise</p>\r\n        <p className=\"text-sm\">\r\n          A handy little LED sign you can command from your browser :)\r\n        </p>\r\n      </div>\r\n      <div className=\"max-w-lg mx-auto flex p-4 bg-gray-900 rounded-lg shadow-xl mb-4\">\r\n        <form className=\"w-full\">\r\n          <div className=\"rounded bg-gray-800 p-4 mb-2\">\r\n            <div className=\"mb-4\">\r\n              <label\r\n                className=\"block font-mono text-gray-400 text-sm font-bold mb-2\"\r\n                htmlFor=\"message\"\r\n              >\r\n                MESSAGE\r\n              </label>\r\n              <textarea\r\n                className={`shadow appearance-none ${\r\n                  false ? \"border-red-600\" : \"\"\r\n                } rounded resize-y h-16 w-full py-2 px-3 bg-green-200 text-gray-900 font-mono mb-3 leading-tight focus:outline-none focus:shadow-outline`}\r\n                id=\"message\"\r\n                type=\"text\"\r\n                value={message}\r\n                onChange={({ target: { value } }) => setMessage(value)}\r\n              />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label\r\n                className=\"block font-mono text-gray-400 text-sm font-bold mb-2\"\r\n                htmlFor=\"speed\"\r\n              >\r\n                SPEED\r\n              </label>\r\n              <input\r\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 bg-green-200 text-gray-900 font-mono mb-3 leading-tight focus:outline-none focus:shadow-outline\"\r\n                id=\"speed\"\r\n                type=\"number\"\r\n                value={speed}\r\n                min={1}\r\n                max={5}\r\n                onChange={({ target: { value } }) => setSpeed(value)}\r\n              />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label\r\n                className=\"block font-mono text-gray-400 text-sm font-bold mb-2\"\r\n                htmlFor=\"color\"\r\n              >\r\n                COLOR\r\n              </label>\r\n              <input\r\n                ref={huebee}\r\n                id=\"color2\"\r\n                className=\"color-input shadow appearance-none rounded w-full py-2 px-3 bg-green-200 text-gray-900 font-mono mb-3 leading-tight focus:outline-none focus:shadow-outline\"\r\n                style={{ cursor: \"pointer\" }}\r\n                value={color}\r\n                onChange={handleColorChange}\r\n              />\r\n              {/* <HuePicker\r\n                id=\"color\"\r\n                className=\"mb-4\"\r\n                width=\"100%\"\r\n                color={color}\r\n                onChange={handleColorChange}\r\n              />\r\n              <AlphaPicker width=\"100%\" onChange={console.log} /> */}\r\n            </div>\r\n          </div>\r\n          <div className=\"rounded bg-gray-800 p-2\">\r\n            <div className=\"flex items-center space-x-3 mb-3\">\r\n              <button\r\n                className={`w-full ${\r\n                  on\r\n                    ? \"bg-gray-700 hover:bg-gray-500\"\r\n                    : \"bg-gray-500 hover:bg-gray-700\"\r\n                } text-white text-sm font-mono py-2 px-4 rounded focus:outline-none focus:shadow-outline`}\r\n                type=\"button\"\r\n                title=\"Screen power. When 'OFF', checks every 10 seconds for power state.\"\r\n                onClick={toggleOn}\r\n              >\r\n                {on ? \"ON\" : \"OFF\"}\r\n              </button>\r\n              <button\r\n                className={`w-full ${\r\n                  isOfflineMode\r\n                    ? \"bg-gray-500 hover:bg-gray-700\"\r\n                    : \"bg-gray-700 hover:bg-gray-500\"\r\n                } text-white text-sm font-mono py-2 px-4 rounded focus:outline-none focus:shadow-outline`}\r\n                type=\"button\"\r\n                title=\"When 'LIVE', device will check for new messages once a minute. Use 'OFFLINE' mode if you want to set messages to use on the go. Requires hard-reset.\"\r\n                onClick={toggleisOffline}\r\n              >\r\n                {isOfflineMode ? \"OFFLINE\" : \"LIVE\"}\r\n              </button>\r\n              <button\r\n                className=\"w-full bg-gray-500 hover:bg-gray-700 text-white text-sm font-mono py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n                type=\"button\"\r\n                title=\"Delete all custom messages. Will revert to device's default message.\"\r\n                onClick={handleClear}\r\n              >\r\n                CLEAR\r\n              </button>\r\n            </div>\r\n            <button\r\n              className=\"w-full bg-red-500 hover:bg-red-700 text-white text-sm font-mono py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n              type=\"button\"\r\n              title=\"Upload a message to the device.\"\r\n              onClick={handleSubmit}\r\n            >\r\n              SEND\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {messages.map(renderMessage)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/main.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}